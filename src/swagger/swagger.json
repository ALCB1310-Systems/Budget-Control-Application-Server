{
  "openapi": "3.0.0",
  "info": {
    "title": "Budget Control Application",
    "description": "This is all of the routes and what they will receive and return in the **Budget Control Application** API",
    "contact": {
      "name": "Andr√©s Court",
      "email": "andres@andrescourt.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/alcb1310/Budget-Control-Application-API/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "security": [
    {
      "password": [
        "read",
        "write"
      ]
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication"
    },
    {
      "name": "Budgets",
      "description": "Budgets Operations"
    },
    {
      "name": "Budget Items",
      "description": "Budget Items operations"
    },
    {
      "name": "Company",
      "description": "Company operations"
    },
    {
      "name": "Invoices",
      "description": "Invoices Operations"
    },
    {
      "name": "Invoice Details",
      "description": "Invoice Details Operations"
    },
    {
      "name": "Projects",
      "description": "Projects operations"
    },
    {
      "name": "Suppliers",
      "description": "Suppliers operations"
    },
    {
      "name": "Users",
      "description": "Users operations"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "security": []
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Retrieves the company information",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Updates the company information",
        "description": "Updates the company information of the ***logged in*** user only the company UUID will be obtained from the authentication token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Creates a new company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Company already exists"
          }
        },
        "security": []
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a list of all the users",
        "description": "Returns only the list of the users of the ***logged in*** user's company. The API will not let users read data from other company",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Maximum amount of users reached"
          },
          "409": {
            "description": "Conflict - User already exists"
          }
        }
      }
    },
    "/users/{uuid}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a specific user",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found - No user found with that UUID"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user information",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found - No user found with that UUID"
          },
          "409": {
            "description": "Conflict - That user already exists"
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get all of the suppliers information",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Search by name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuppliersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Creates a supplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppliersCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuppliersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "409": {
            "description": "Conflict - Supplier already exists"
          }
        }
      }
    },
    "/suppliers/{uuid}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Gets an specific supplier",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuppliersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Updates an specific supplier",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppliersCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuppliersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/budget-items": {
      "get": {
        "tags": [
          "Budget Items"
        ],
        "summary": "Gets all of the budget items",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search by name or code",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetItemsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Budget Items"
        ],
        "summary": "Creates a new budget item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetItemsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetItemsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "409": {
            "description": "Conflict - Budget Item already exists"
          }
        }
      }
    },
    "/budget-items/{uuid}": {
      "get": {
        "tags": [
          "Budget Items"
        ],
        "summary": "Gets an specific budget item",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "applicatioin/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetItemsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Budget Items"
        ],
        "summary": "Updates an specific budget item",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetItemsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "applicatioin/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetItemsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict - Budget Item already exists"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets all the projects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "409": {
            "description": "Conflict - Project already exists"
          }
        }
      }
    },
    "/projects/{uuid}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a specific project",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates a specific project",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict - Project exists"
          }
        }
      }
    },
    "/budgets": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get all the budget",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Create a budget for a project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "409": {
            "description": "Conflict- Budget already created"
          }
        }
      }
    },
    "/budgets/{uuid}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get a specific budget",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "summary": "Update a specific budget",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict - Budget already exists"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Return a list of all the invoices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          }
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Creates an invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicesCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "409": {
            "description": "Conflict - Invoice already created"
          }
        }
      }
    },
    "/invoices/{uuid}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Gets a specific invoice",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found - Invoice not found"
          }
        }
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Updates a specific invoice",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found - Invoice not found"
          },
          "409": {
            "description": "Conflict - Invoice already exists"
          }
        }
      }
    },
    "/invoices/{uuid}/details": {
      "get": {
        "tags": [
          "Invoice Details"
        ],
        "summary": "Get all of the details of a specific invoice",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Invoice UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDetailsResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "Invoice Details"
        ],
        "summary": "Create details of a specific invoice",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Invoice UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDetailsCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict - Detail already exists"
          }
        }
      }
    },
    "/invoices/{uuid}/details/{detail_uuid}": {
      "get": {
        "tags": [
          "Invoice Details"
        ],
        "summary": "Get a specific invoice detail",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Invoice UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "detail_uuid",
            "in": "path",
            "description": "Invoice detail UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice Details"
        ],
        "summary": "Deletes a specific invoice detail",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Invoice UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "detail_uuid",
            "in": "path",
            "description": "Invoice detail UUID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Succesfully deleted"
          },
          "401": {
            "description": "Unauthorized - Please login"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "format": "JWT Token"
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          }
        }
      },
      "CompanyCreate": {
        "type": "object",
        "properties": {
          "ruc": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "employees": {
            "type": "integer"
          }
        }
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "ruc": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "employees": {
            "type": "integer"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          }
        }
      },
      "UsersCreate": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SuppliersCreate": {
        "type": "object",
        "properties": {
          "supplier_id": {
            "minLength": 8,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contact_name": {
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        }
      },
      "SuppliersResponse": {
        "type": "object",
        "properties": {
          "supplier_id": {
            "minLength": 8,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contact_name": {
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        }
      },
      "BudgetItemsCreate": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accumulates": {
            "type": "boolean"
          },
          "level": {
            "type": "integer"
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "BudgetItemsResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "maxLength": 50,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accumulates": {
            "type": "boolean"
          },
          "level": {
            "type": "integer"
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ProjectsCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "ProjectsResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "BudgetsCreate": {
        "type": "object",
        "properties": {
          "budget_item_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "cost": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "BudgetsResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "budget_item": {
            "$ref": "#/components/schemas/BudgetItemsResponse"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectsResponse"
          },
          "initial_quantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "initial_cost": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "initial_total": {
            "type": "number",
            "format": "float"
          },
          "spent_quantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "spent_total": {
            "type": "number",
            "format": "float"
          },
          "to_spend_quantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "to_spend_cost": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "to_spend_total": {
            "type": "number",
            "format": "float"
          },
          "updated_budget": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "InvoicesCreate": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "supplier_id": {
            "type": "string",
            "format": "uuid"
          },
          "invoice_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "InvoicesUpdate": {
        "type": "object",
        "properties": {
          "invoice_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "InvoicesResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectsResponse"
          },
          "supplier": {
            "$ref": "#/components/schemas/SuppliersResponse"
          },
          "invoice_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "InvoiceDetailsCreate": {
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "string",
            "format": "uuid"
          },
          "budget_item_id": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "cost": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "InvoiceDetailsResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoicesResponse"
          },
          "budget_item": {
            "$ref": "#/components/schemas/BudgetItemsResponse"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "cost": {
            "type": "number",
            "format": "float"
          },
          "total": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "securitySchemes": {
      "password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "http://example.com/oauth/token",
            "scopes": {
              "write": "allows modifying resources",
              "read": "allows reading resources"
            }
          }
        }
      }
    }
  }
}